// Stub class generated by rmic, do not edit.
// Contents subject to change without notice.

package fr.ird.animat.server;

public final class Animal_Stub
    extends java.rmi.server.RemoteStub
    implements fr.ird.animat.Animal, java.rmi.Remote
{
    private static final long serialVersionUID = 2;
    
    private static java.lang.reflect.Method $method_addAnimalChangeListener_0;
    private static java.lang.reflect.Method $method_getClock_1;
    private static java.lang.reflect.Method $method_getObservations_2;
    private static java.lang.reflect.Method $method_getPath_3;
    private static java.lang.reflect.Method $method_getPerceptionArea_4;
    private static java.lang.reflect.Method $method_getPopulation_5;
    private static java.lang.reflect.Method $method_getSpecies_6;
    private static java.lang.reflect.Method $method_kill_7;
    private static java.lang.reflect.Method $method_removeAnimalChangeListener_8;
    
    static {
	try {
	    $method_addAnimalChangeListener_0 = fr.ird.animat.Animal.class.getMethod("addAnimalChangeListener", new java.lang.Class[] {fr.ird.animat.event.AnimalChangeListener.class});
	    $method_getClock_1 = fr.ird.animat.Animal.class.getMethod("getClock", new java.lang.Class[] {});
	    $method_getObservations_2 = fr.ird.animat.Animal.class.getMethod("getObservations", new java.lang.Class[] {java.util.Date.class});
	    $method_getPath_3 = fr.ird.animat.Animal.class.getMethod("getPath", new java.lang.Class[] {});
	    $method_getPerceptionArea_4 = fr.ird.animat.Animal.class.getMethod("getPerceptionArea", new java.lang.Class[] {java.util.Date.class});
	    $method_getPopulation_5 = fr.ird.animat.Animal.class.getMethod("getPopulation", new java.lang.Class[] {});
	    $method_getSpecies_6 = fr.ird.animat.Animal.class.getMethod("getSpecies", new java.lang.Class[] {});
	    $method_kill_7 = fr.ird.animat.Animal.class.getMethod("kill", new java.lang.Class[] {});
	    $method_removeAnimalChangeListener_8 = fr.ird.animat.Animal.class.getMethod("removeAnimalChangeListener", new java.lang.Class[] {fr.ird.animat.event.AnimalChangeListener.class});
	} catch (java.lang.NoSuchMethodException e) {
	    throw new java.lang.NoSuchMethodError(
		"stub class initialization failed");
	}
    }
    
    // constructors
    public Animal_Stub(java.rmi.server.RemoteRef ref) {
	super(ref);
    }
    
    // methods from remote interfaces
    
    // implementation of addAnimalChangeListener(AnimalChangeListener)
    public void addAnimalChangeListener(fr.ird.animat.event.AnimalChangeListener $param_AnimalChangeListener_1)
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_addAnimalChangeListener_0, new java.lang.Object[] {$param_AnimalChangeListener_1}, -5797540198807608017L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of getClock()
    public fr.ird.animat.Clock getClock()
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_getClock_1, null, 6357386218885171077L);
	    return ((fr.ird.animat.Clock) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of getObservations(Date)
    public java.util.Map<fr.ird.animat.Parameter,fr.ird.animat.Observation> getObservations(java.util.Date $param_Date_1)
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_getObservations_2, new java.lang.Object[] {$param_Date_1}, 616392307727729905L);
	    return ((java.util.Map) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of getPath()
    public java.awt.Shape getPath()
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_getPath_3, null, -6478547988524602368L);
	    return ((java.awt.Shape) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of getPerceptionArea(Date)
    public java.awt.Shape getPerceptionArea(java.util.Date $param_Date_1)
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_getPerceptionArea_4, new java.lang.Object[] {$param_Date_1}, 2943306915107882672L);
	    return ((java.awt.Shape) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of getPopulation()
    public fr.ird.animat.Population getPopulation()
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_getPopulation_5, null, 4053430635641382738L);
	    return ((fr.ird.animat.Population) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of getSpecies()
    public fr.ird.animat.Species getSpecies()
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_getSpecies_6, null, -3470274509762520500L);
	    return ((fr.ird.animat.Species) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of kill()
    public void kill()
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_kill_7, null, -556565808393701815L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of removeAnimalChangeListener(AnimalChangeListener)
    public void removeAnimalChangeListener(fr.ird.animat.event.AnimalChangeListener $param_AnimalChangeListener_1)
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_removeAnimalChangeListener_8, new java.lang.Object[] {$param_AnimalChangeListener_1}, -8407202939323305714L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
}

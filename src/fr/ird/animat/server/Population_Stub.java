// Stub class generated by rmic, do not edit.
// Contents subject to change without notice.

package fr.ird.animat.server;

public final class Population_Stub
    extends java.rmi.server.RemoteStub
    implements fr.ird.animat.Population, java.rmi.Remote
{
    private static final long serialVersionUID = 2;
    
    private static java.lang.reflect.Method $method_addPopulationChangeListener_0;
    private static java.lang.reflect.Method $method_getAnimals_1;
    private static java.lang.reflect.Method $method_getEnvironment_2;
    private static java.lang.reflect.Method $method_getSpatialBounds_3;
    private static java.lang.reflect.Method $method_kill_4;
    private static java.lang.reflect.Method $method_newAnimal_5;
    private static java.lang.reflect.Method $method_removePopulationChangeListener_6;
    
    static {
	try {
	    $method_addPopulationChangeListener_0 = fr.ird.animat.Population.class.getMethod("addPopulationChangeListener", new java.lang.Class[] {fr.ird.animat.event.PopulationChangeListener.class});
	    $method_getAnimals_1 = fr.ird.animat.Population.class.getMethod("getAnimals", new java.lang.Class[] {});
	    $method_getEnvironment_2 = fr.ird.animat.Population.class.getMethod("getEnvironment", new java.lang.Class[] {});
	    $method_getSpatialBounds_3 = fr.ird.animat.Population.class.getMethod("getSpatialBounds", new java.lang.Class[] {});
	    $method_kill_4 = fr.ird.animat.Population.class.getMethod("kill", new java.lang.Class[] {});
	    $method_newAnimal_5 = fr.ird.animat.Population.class.getMethod("newAnimal", new java.lang.Class[] {fr.ird.animat.Species.class, java.awt.geom.Point2D.class});
	    $method_removePopulationChangeListener_6 = fr.ird.animat.Population.class.getMethod("removePopulationChangeListener", new java.lang.Class[] {fr.ird.animat.event.PopulationChangeListener.class});
	} catch (java.lang.NoSuchMethodException e) {
	    throw new java.lang.NoSuchMethodError(
		"stub class initialization failed");
	}
    }
    
    // constructors
    public Population_Stub(java.rmi.server.RemoteRef ref) {
	super(ref);
    }
    
    // methods from remote interfaces
    
    // implementation of addPopulationChangeListener(PopulationChangeListener)
    public void addPopulationChangeListener(fr.ird.animat.event.PopulationChangeListener $param_PopulationChangeListener_1)
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_addPopulationChangeListener_0, new java.lang.Object[] {$param_PopulationChangeListener_1}, 913718699950943085L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of getAnimals()
    public java.util.Set<fr.ird.animat.Animal> getAnimals()
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_getAnimals_1, null, 32346638742167833L);
	    return ((java.util.Set) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of getEnvironment()
    public fr.ird.animat.Environment getEnvironment()
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_getEnvironment_2, null, 6556364000676045125L);
	    return ((fr.ird.animat.Environment) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of getSpatialBounds()
    public java.awt.Shape getSpatialBounds()
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_getSpatialBounds_3, null, 3972738008854418653L);
	    return ((java.awt.Shape) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of kill()
    public void kill()
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_kill_4, null, -556565808393701815L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of newAnimal(Species, Point2D)
    public fr.ird.animat.Animal newAnimal(fr.ird.animat.Species $param_Species_1, java.awt.geom.Point2D $param_Point2D_2)
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_newAnimal_5, new java.lang.Object[] {$param_Species_1, $param_Point2D_2}, -8349017764298873166L);
	    return ((fr.ird.animat.Animal) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of removePopulationChangeListener(PopulationChangeListener)
    public void removePopulationChangeListener(fr.ird.animat.event.PopulationChangeListener $param_PopulationChangeListener_1)
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_removePopulationChangeListener_6, new java.lang.Object[] {$param_PopulationChangeListener_1}, -7805462904085439729L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
}
